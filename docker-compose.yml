version: '3.8'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
    restart: always
    volumes:
      - ~/uploads:/app/uploads
    depends_on:
      - mongo
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - 80
    env_file:
      - ./frontend/.env
    restart: unless-stopped
#    depends_on:
#      backend:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-kfs", "https://localhost/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 512M
    networks:
      - app-network

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    networks:
      - app-network

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/archive/posudaotido.ru:/etc/nginx/ssl:ro
      - ~/application/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ~/uploads:/etc/nginx/uploads
#      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./ssl:/etc/nginx/ssl:ro
#      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
